Fatal error: java.lang.OutOfMemoryError: Could not commit the memory for an aligned heap chunk, OS may be out of memory.
Printing instructions (ip=0x00007ffc57178144):
  0x00007ffc57178044: 0x8e 0xa7 0xdb 0xe1 0xff 0xc3 0x49 0x8d 0x96 0xc8 0x28 0x4c 0x00 0xe8 0x9a 0xbb
  0x00007ffc57178054: 0x05 0x00 0x90 0xeb 0xe1 0x48 0x89 0x44 0x24 0x20 0x66 0x90 0xe9 0x75 0xfd 0xff
  0x00007ffc57178064: 0xff 0x48 0x8b 0x54 0x24 0x28 0xe8 0x11 0xfe 0x03 0x00 0x90 0xe9 0xa7 0xfd 0xff
  0x00007ffc57178074: 0xff 0x48 0x8b 0xc8 0xe9 0x8f 0xfe 0xff 0xff 0x48 0x8b 0x44 0x24 0x40 0x4c 0x8b
  0x00007ffc57178084: 0xc0 0xe9 0xeb 0xfe 0xff 0xff 0xba 0x01 0x00 0x00 0x00 0x41 0xb8 0x01 0x00 0x00
  0x00007ffc57178094: 0x00 0xe8 0x16 0xe4 0xe1 0xff 0x90 0xeb 0x9d 0x66 0x66 0x90 0xe9 0x10 0xff 0xff
  0x00007ffc571780a4: 0xff 0xe9 0x0b 0xff 0xff 0xff 0xe9 0x06 0xff 0xff 0xff 0xe9 0x01 0xff 0xff 0xff
  0x00007ffc571780b4: 0xe9 0xfc 0xfe 0xff 0xff 0xe9 0xf7 0xfe 0xff 0xff 0x66 0x90 0xe9 0xf0 0xfe 0xff
  0x00007ffc571780c4: 0xff 0xe9 0xeb 0xfe 0xff 0xff 0xe9 0xe6 0xfe 0xff 0xff 0xe9 0xe1 0xfe 0xff 0xff
  0x00007ffc571780d4: 0xe9 0xdc 0xfe 0xff 0xff 0xe9 0xd7 0xfe 0xff 0xff 0x66 0x90 0xe9 0xd0 0xfe 0xff
  0x00007ffc571780e4: 0xff 0xe9 0xcb 0xfe 0xff 0xff 0xe9 0xc6 0xfe 0xff 0xff 0xcc 0x55 0x48 0x8b 0xec
  0x00007ffc571780f4: 0x48 0x83 0xec 0x20 0x4c 0x89 0x4c 0x24 0x10 0x4c 0x89 0x44 0x24 0x08 0x48 0x89
  0x00007ffc57178104: 0x54 0x24 0x18 0xe8 0xe4 0x63 0x05 0x00 0x90 0x41 0xc7 0x87 0xe8 0x00 0x00 0x00
  0x00007ffc57178114: 0x01 0x00 0x00 0x00 0xf0 0x83 0x04 0x24 0x00 0x49 0xc7 0x47 0x08 0x01 0x00 0x00
  0x00007ffc57178124: 0x00 0x41 0xc7 0x87 0xe4 0x00 0x00 0x00 0xfe 0xfe 0xfe 0x7e 0x48 0x8b 0x54 0x24
  0x00007ffc57178134: 0x18 0x4c 0x8b 0x44 0x24 0x08 0x4c 0x8b 0x4c 0x24 0x10 0xe8 0xdc 0xfb 0xff 0xff
> 0x00007ffc57178144: 0x90 0xcc 0xcc 0xcc 0xcc 0xcc 0xcc 0xcc 0xcc 0xcc 0xcc 0xcc 0x48 0x8d 0x5c 0x24
  0x00007ffc57178154: 0xd8 0x49 0x3b 0x5f 0x08 0x0f 0x86 0x91 0x97 0xff 0xff 0x55 0x48 0x8b 0xec 0x48
  0x00007ffc57178164: 0x8b 0xe3 0x48 0x89 0x54 0x24 0x18 0x41 0x8b 0x8e 0xe0 0xb0 0xa8 0x00 0x85 0xc9
  0x00007ffc57178174: 0x0f 0x84 0x47 0x02 0x00 0x00 0x49 0x8b 0x5f 0x40 0x48 0x85 0xdb 0x0f 0x85 0x82
  0x00007ffc57178184: 0x00 0x00 0x00 0x49 0x8b 0x74 0xce 0x10 0x0f 0x1f 0x40 0x00 0x48 0x85 0xf6 0x0f
  0x00007ffc57178194: 0x85 0x1f 0x02 0x00 0x00 0x48 0xc7 0xc0 0x00 0x00 0x00 0x00 0xf0 0x49 0x0f 0xb1
  0x00007ffc571781a4: 0x5c 0xce 0x10 0x0f 0x85 0x14 0x02 0x00 0x00 0x66 0x66 0x90 0x83 0x7a 0x14 0x02
  0x00007ffc571781b4: 0x0f 0x84 0x85 0x00 0x00 0x00 0x41 0x8b 0x86 0xe0 0xb0 0xa8 0x00 0x49 0x83 0x7f
  0x00007ffc571781c4: 0x40 0x00 0x0f 0x85 0x44 0x01 0x00 0x00 0x41 0x8b 0x54 0xc6 0x1c 0x83 0xfa 0x01
  0x00007ffc571781d4: 0x0f 0x85 0x9b 0x02 0x00 0x00 0x49 0xc7 0x44 0xc6 0x10 0x00 0x00 0x00 0x00 0xf0
  0x00007ffc571781e4: 0x83 0x04 0x24 0x00 0x0f 0x1f 0x84 0x00 0x00 0x00 0x00 0x00 0x83 0xfa 0x01 0x0f
  0x00007ffc571781f4: 0x84 0x72 0x01 0x00 0x00 0x48 0x8b 0xe5 0x5d 0x41 0x83 0x6f 0x10 0x01 0x0f 0x8e
  0x00007ffc57178204: 0xe8 0xd9 0xe1 0xff 0xc3 0x41 0x8b 0x47 0x48 0x66 0x66 0x90 0x85 0xc0 0x0f 0x84
  0x00007ffc57178214: 0x21 0x00 0x00 0x00 0x41 0x8b 0x74 0xc6 0x4c 0x85 0xf6 0x0f 0x84 0x87 0x01 0x00
  0x00007ffc57178224: 0x00 0x49 0x8d 0x34 0xf6 0x0f 0x1f 0x80 0x00 0x00 0x00 0x00 0x49 0x3b 0xf6 0x0f
  0x00007ffc57178234: 0x85 0x4e 0xff 0xff 0xff 0xe8 0x82 0x53 0x05 0x00 0x90 0xc7 0x42 0x14 0x01 0x00

Top of stack (sp=0x0000004fda9fe3a0):
  0x0000004fda9fe380: 0x000002017c8a1738 0x000002017c895f78 0x0000004fda9fe3c0 0x00007ffc57178144
> 0x0000004fda9fe3a0: 0x00000152c81adc48 0x000002017bd80000 0x000002017c8a1738 0x00007ffc568617ba
  0x0000004fda9fe3c0: 0x0000004fda9fe3e0 0x00007ffc571d2c38 0x00007ffc57788ead 0x0000004fda9fe600
  0x0000004fda9fe3e0: 0x0000004fda9fe460 0x00007ffc568617ba 0x000002017e780de0 0x005401c67e780b90
  0x0000004fda9fe400: 0x000002017c8df980 0x000002017c326438 0x000002017bd80000 0x000f70080000000b
  0x0000004fda9fe420: 0x000002017c538040 0x000002017c8df980 0x000002017c80a938 0x000002017c79b290
  0x0000004fda9fe440: 0x000002017c30cac0 0x0000004fda9fe600 0x0000000000000000 0x0000000000000000
  0x0000004fda9fe460: 0x0000004fda9fe4e0 0x00007ffc56860f12 0x000002017e780b90 0x000002017e780da0
  0x0000004fda9fe480: 0x000002017e861b30 0x000002017e780b90 0x000002017c449a90 0x000002017c449a90
  0x0000004fda9fe4a0: 0x00177d1a00000000 0x000002017c794f10 0x000002017c93e8d0 0x00007ffc00000000
  0x0000004fda9fe4c0: 0x000002017c79b290 0x001436525675102f 0x000002017c30cac0 0x0000000100000001
  0x0000004fda9fe4e0: 0x0000004fda9fe560 0x00007ffc5685ed5e 0x000002017e7812f8 0x000002017e380c80
  0x0000004fda9fe500: 0x000002017bd80000 0x000002017e781940 0x0000004fda9fe560 0x0016bc4b5619a895
  0x0000004fda9fe520: 0x000002017c538040 0x000002017c30cac0 0x00007ffc5685ec81 0x0000004fda9fe4f0
  0x0000004fda9fe540: 0x0000000000000000 0x0000000b7e781368 0x00007ffc57788e9b 0x0000004fda9fe600
  0x0000004fda9fe560: 0x0000004fda9fe5a0 0x00007ffc55ef7e77 0x000002017bd11c40 0x000002017e781340
  0x0000004fda9fe580: 0x0000020100000000 0x000002017c242210 0x000002017c538040 0x0000004fda9fe600

VM thread locals for the failing thread 0x0000020145a81ac0:
  0: JNIThreadLocalEnvironment.jniFunctions = (bytes) 0x000002017c560010
  8: StackOverflowCheckImpl.stackBoundaryTL = (Word) 0x0000000000000001 (1)
  16: Safepoint.safepointRequested = (int) 0x7ffdcb4d (2147339085)
  20: StatusSupport.statusTL = (int) 0x00000001 (1)
  24: ThreadLocalAllocation.regularTLAB = (bytes) 
    0x0000020145a81ad8: 0x0000000000000000 0x0000000000000000
    0x0000020145a81ae8: 0x0000000000000000 0x0000000000000000
  56: JavaFrameAnchors.lastAnchor = (Word) 0x0000000000000000 (0)
  64: PlatformThreads.currentVThreadId = (long) 0x0000000000000010 (16)
  72: PlatformThreads.currentThread = (Object) 0x000002017e780918
    is an object of type java.lang.Thread
  80: ActionOnExitSafepointSupport.returnIP = (Word) 0x0000000000000000 (0)
  88: ActionOnExitSafepointSupport.returnSP = (Word) 0x0000000000000000 (0)
  96: SubstrateDiagnostics.threadOnlyAttachedForCrashHandler = (bytes) 0x0000000000000000
  104: ThreadLocalAllocation.allocatedBytes = (Word) 0x00000000000e0b60 (920416)
  112: VMThreads.IsolateTL = (Word) 0x000002017bd80000 (2205395976192)
  120: VMThreads.OSThreadHandleTL = (Word) 0x0000000000000434 (1076)
  128: VMThreads.OSThreadIdTL = (Word) 0x0000000000000978 (2424)
  136: VMThreads.StackBase = (Word) 0x0000004fdaa00000 (342970335232)
  144: VMThreads.StackEnd = (Word) 0x0000004fda900000 (342969286656)
  152: VMThreads.StartedByCurrentIsolate = (bytes) 0x0000000000000000
  160: VMThreads.nextTL = (Word) 0x0000000000000000 (0)
  168: VMThreads.unalignedIsolateThreadMemoryTL = (Word) 0x0000020145a81ac0 (2204486867648)
  176: ExceptionUnwind.currentException = (Object) 0x0000000000000000
  180: IdentityHashCodeSupport.hashCodeGeneratorTL = (Object) 0x000002017e7a0600
    is an object of type java.util.SplittableRandom
  184: IsolatedCompileClient.currentClient = (Object) 0x0000000000000000
  188: IsolatedCompileContext.currentContext = (Object) 0x0000000000000000
  192: JNIObjectHandles.handles = (Object) 0x000002017e7809e0
    is an object of type com.oracle.svm.core.handles.ThreadLocalHandles
  196: JNIThreadLocalPendingException.pendingException = (Object) 0x0000000000000000
  200: JNIThreadLocalReferencedObjects.referencedObjectsListHead = (Object) 0x0000000000000000
  204: JNIThreadOwnedMonitors.ownedMonitors = (Object) 0x0000000000000000
  208: NoAllocationVerifier.openVerifiers = (Object) 0x000002017c8df980
    is an object of type com.oracle.svm.core.heap.NoAllocationVerifier
  212: ThreadingSupportImpl.activeTimer = (Object) 0x0000000000000000
  216: ActionOnExitSafepointSupport.actionTL = (int) 0x00000000 (0)
  220: ActionOnTransitionToJavaSupport.actionTL = (int) 0x00000000 (0)
  224: ImplicitExceptions.implicitExceptionsAreFatal = (int) 0x00000000 (0)
  228: StackOverflowCheckImpl.yellowZoneStateTL = (int) 0x7efefefe (2130640638)
  232: StatusSupport.safepointBehaviorTL = (int) 0x00000001 (1)
  236: ThreadingSupportImpl.currentPauseDepth = (int) 0x00000001 (1)
  
Java frame anchors for the failing thread 0x0000020145a81ac0:
  No anchors
  
Stacktrace for the failing thread 0x0000020145a81ac0 (A=AOT compiled, J=JIT compiled, D=deoptimized, i=inlined):
  i  SP 0x0000004fda9fe3a0 IP 0x00007ffc57178144 size=48    com.oracle.svm.core.jdk.VMErrorSubstitutions.shutdown(VMErrorSubstitutions.java:148)
  A  SP 0x0000004fda9fe3a0 IP 0x00007ffc57178144 size=48    com.oracle.svm.core.jdk.VMErrorSubstitutions.shouldNotReachHere(VMErrorSubstitutions.java:141)
  A  SP 0x0000004fda9fe3d0 IP 0x00007ffc571d2c38 size=32    com.oracle.svm.core.util.VMError.shouldNotReachHere(VMError.java:97)
  i  SP 0x0000004fda9fe3f0 IP 0x00007ffc568617ba size=128   com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation.operate(GCImpl.java:1202)
  i  SP 0x0000004fda9fe3f0 IP 0x00007ffc568617ba size=128   com.oracle.svm.core.thread.VMOperation.execute(VMOperation.java:108)
  A  SP 0x0000004fda9fe3f0 IP 0x00007ffc568617ba size=128   com.oracle.svm.core.thread.VMOperationControl$WorkQueues.drain(VMOperationControl.java:622)
  A  SP 0x0000004fda9fe470 IP 0x00007ffc56860f12 size=128   com.oracle.svm.core.thread.VMOperationControl$WorkQueues.executeAllQueuedVMOperations(VMOperationControl.java:592)
  A  SP 0x0000004fda9fe4f0 IP 0x00007ffc5685ed5e size=128   com.oracle.svm.core.thread.VMOperationControl$WorkQueues.enqueueAndExecute(VMOperationControl.java:529)
  i  SP 0x0000004fda9fe570 IP 0x00007ffc55ef7e77 size=64    com.oracle.svm.core.thread.VMOperationControl.enqueue(VMOperationControl.java:320)
  i  SP 0x0000004fda9fe570 IP 0x00007ffc55ef7e77 size=64    com.oracle.svm.core.thread.VMOperationControl.enqueue(VMOperationControl.java:282)
  A  SP 0x0000004fda9fe570 IP 0x00007ffc55ef7e77 size=64    com.oracle.svm.core.thread.NativeVMOperation.enqueue(NativeVMOperation.java:49)
  i  SP 0x0000004fda9fe5b0 IP 0x00007ffc55ef7c55 size=192   com.oracle.svm.core.genscavenge.GCImpl.enqueueCollectOperation(GCImpl.java:214)
  A  SP 0x0000004fda9fe5b0 IP 0x00007ffc55ef7c55 size=192   com.oracle.svm.core.genscavenge.GCImpl.collectWithoutAllocating(GCImpl.java:193)
  A  SP 0x0000004fda9fe670 IP 0x00007ffc568839f5 size=32    com.oracle.svm.core.genscavenge.GCImpl.collect(GCImpl.java:174)
  i  SP 0x0000004fda9fe690 IP 0x00007ffc5671f088 size=80    com.oracle.svm.core.genscavenge.GCImpl.maybeCauseUserRequestedCollection(GCImpl.java:168)
  i  SP 0x0000004fda9fe690 IP 0x00007ffc5671f088 size=80    org.graalvm.compiler.serviceprovider.GraalServices.notifyLowMemoryPoint(GraalServices.java:746)
  A  SP 0x0000004fda9fe690 IP 0x00007ffc5671f088 size=80    org.graalvm.compiler.core.CompilationWrapper.run(CompilationWrapper.java:229)
  A  SP 0x0000004fda9fe6e0 IP 0x00007ffc5655ff07 size=160   org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:382)
  A  SP 0x0000004fda9fe780 IP 0x00007ffc56750680 size=48    org.graalvm.compiler.hotspot.CompilationTask.runCompilation(CompilationTask.java:357)
  A  SP 0x0000004fda9fe7b0 IP 0x00007ffc5674d6ed size=352   org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:159)
  A  SP 0x0000004fda9fe910 IP 0x00007ffc5674bc6e size=80    org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:693)
  i  SP 0x0000004fda9fe960 IP 0x00007ffc567507c7 size=80    org.graalvm.compiler.hotspot.HotSpotGraalCompiler.compileMethod(HotSpotGraalCompiler.java:110)
  A  SP 0x0000004fda9fe960 IP 0x00007ffc567507c7 size=80    jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.compileMethod(HotSpotJVMCIRuntime.java:924)
  A  SP 0x0000004fda9fe9b0 IP 0x00007ffc56f1e092 size=96    com.oracle.svm.core.jni.JNIJavaCallWrapperHolder.invoke_AIJI_A(JNIJavaCallWrapperHolder.java:0)
  A  SP 0x0000004fda9fea10 IP 0x00007ffc55d8d81d size=304   com.oracle.svm.core.jni.JNIJavaCallVariantWrapperHolder.invokeJJIJIJI_J_VA_LIST_Nonvirtual(JNIJavaCallVariantWrapperHolder.java:0)
  
Threads:
  0x0000020145a81ac0 STATUS_IN_JAVA (PREVENT_VM_FROM_REACHING_SAFEPOINT) "JVMCI-native CompilerThread0" - 0x000002017e780918, stack(0x0000004fda900000,0x0000004fdaa00000)
  
VMOperation in progress: Garbage collection
  Safepoint: true
  QueuingThread: 0x0000020145a81ac0
  ExecutingThread: 0x0000020145a81ac0
  
The 30 most recent VM operation status changes:
  0.146s - Started Garbage collection (safepoint: true, queueingThread: 0x0000020145a81ac0, executingThread: 0x0000020145a81ac0, safepointId: 1)
  
VM mutexes:
  mutex "referencePendingList" is unlocked.
  mutex "RealLog.backTracePrinterMutex" is unlocked.
  mutex "freeList" is unlocked.
  mutex "mainVMOperationControlWorkQueue" is locked by thread 0x0000020145a81ac0
  mutex "thread" is locked by thread 0x0000020145a81ac0
  
Build time information:
  Version: 21.0.5+9-LTS, serial gc, compressed references, pgo
  Platform: windows/amd64
  Page size: 4096
  Container support: false
  CPU features used for AOT compiled code: CX8, CMOV, FXSR, MMX, SSE, SSE2
  
Runtime information:
  CPU cores (OS): 12
  Memory: 8118M
  Page size: 4096
  VM uptime: 0.185s
  Current timestamp: 1738686254148
  AOT compiled code: 0x00007ffc55cb1030 - 0x00007ffc5775cd6f
  
Heap settings and statistics:
  Supports isolates: true
  Heap base: 0x000002017bd80000
  Object reference size: 4
  Reserved object header bits: 0b111
  Aligned chunk size: 524288
  Large array threshold: 131072
  Incremental collections: 0
  Complete collections: 0
  
Heap usage:
  Eden: 22.00M (22.00M in 44 aligned chunks, 0.00M in 0 unaligned chunks)
  Old: 0.00M (0.00M in 0 aligned chunks, 0.00M in 0 unaligned chunks)
  
Native image heap boundaries:
  ReadOnly Primitives: 0x000002017be00830 - 0x000002017c243b90
  ReadOnly References: 0x000002017c243b90 - 0x000002017c55f400
  ReadOnly Relocatables: 0x000002017c560000 - 0x000002017c6efca8
  Writable Primitives: 0x000002017c6f0000 - 0x000002017c79dab8
  Writable References: 0x000002017c79dab8 - 0x000002017c93f860
  Writable Huge: 0x000002017c980038 - 0x000002017ca00578
  ReadOnly Huge: 0x000002017ca01038 - 0x000002017d23a9e0
  
Heap chunks: E=eden, S=survivor, O=old, F=free; A=aligned chunk, U=unaligned chunk; T=to space
  |0x000002017d500000|0x000002017d500830, 0x000002017d51c6f0, 0x000002017d580000| 21%|  E|A|
  |0x000002017d480000|0x000002017d480830, 0x000002017d4fffd8, 0x000002017d500000| 99%|  E|A|
  |0x000002017d400000|0x000002017d400830, 0x000002017d47fff8, 0x000002017d480000| 99%|  E|A|
  |0x000002017d380000|0x000002017d380830, 0x000002017d400000, 0x000002017d400000|100%|  E|A|
  |0x000002017d300000|0x000002017d300830, 0x000002017d37ff20, 0x000002017d380000| 99%|  E|A|
  |0x000002017d280000|0x000002017d280830, 0x000002017d2fffc8, 0x000002017d300000| 99%|  E|A|
  |0x000002017d680000|0x000002017d680830, 0x000002017d685cf8, 0x000002017d700000|  4%|  E|A|
  |0x000002017d600000|0x000002017d600830, 0x000002017d67fff0, 0x000002017d680000| 99%|  E|A|
  |0x000002017d580000|0x000002017d580830, 0x000002017d5ffff8, 0x000002017d600000| 99%|  E|A|
  |0x000002017d880000|0x000002017d880830, 0x000002017d8dc138, 0x000002017d900000| 71%|  E|A|
  |0x000002017d800000|0x000002017d800830, 0x000002017d880000, 0x000002017d880000|100%|  E|A|
  |0x000002017d780000|0x000002017d780830, 0x000002017d7fff10, 0x000002017d800000| 99%|  E|A|
  |0x000002017d700000|0x000002017d700830, 0x000002017d77fff0, 0x000002017d780000| 99%|  E|A|
  |0x000002017da00000|0x000002017da00830, 0x000002017da45af0, 0x000002017da80000| 54%|  E|A|
  |0x000002017d980000|0x000002017d980830, 0x000002017d9fffd8, 0x000002017da00000| 99%|  E|A|
  |0x000002017d900000|0x000002017d900830, 0x000002017d97fff0, 0x000002017d980000| 99%|  E|A|
  |0x000002017da80000|0x000002017da80830, 0x000002017dac8750, 0x000002017db00000| 56%|  E|A|
  |0x000002017db00000|0x000002017db00830, 0x000002017db34110, 0x000002017db80000| 40%|  E|A|
  |0x000002017dc80000|0x000002017dc80830, 0x000002017dc8d380, 0x000002017dd00000|  9%|  E|A|
  |0x000002017dc00000|0x000002017dc00830, 0x000002017dc80000, 0x000002017dc80000|100%|  E|A|
  |0x000002017db80000|0x000002017db80830, 0x000002017dc00000, 0x000002017dc00000|100%|  E|A|
  |0x000002017dd00000|0x000002017dd00830, 0x000002017dd32c50, 0x000002017dd80000| 39%|  E|A|
  |0x000002017de80000|0x000002017de80830, 0x000002017de9f8f0, 0x000002017df00000| 24%|  E|A|
  |0x000002017de00000|0x000002017de00830, 0x000002017de80000, 0x000002017de80000|100%|  E|A|
  |0x000002017dd80000|0x000002017dd80830, 0x000002017ddfffe0, 0x000002017de00000| 99%|  E|A|
  |0x000002017e100000|0x000002017e100830, 0x000002017e123188, 0x000002017e180000| 27%|  E|A|
  |0x000002017e080000|0x000002017e080830, 0x000002017e0ffff8, 0x000002017e100000| 99%|  E|A|
  |0x000002017e000000|0x000002017e000830, 0x000002017e07fff8, 0x000002017e080000| 99%|  E|A|
  |0x000002017df80000|0x000002017df80830, 0x000002017dffffc8, 0x000002017e000000| 99%|  E|A|
  |0x000002017df00000|0x000002017df00830, 0x000002017df7fff8, 0x000002017df80000| 99%|  E|A|
  |0x000002017e280000|0x000002017e280830, 0x000002017e28cdc8, 0x000002017e300000|  9%|  E|A|
  |0x000002017e200000|0x000002017e200830, 0x000002017e27ffc8, 0x000002017e280000| 99%|  E|A|
  |0x000002017e180000|0x000002017e180830, 0x000002017e1fffe8, 0x000002017e200000| 99%|  E|A|
  |0x000002017e300000|0x000002017e300830, 0x000002017e338298, 0x000002017e380000| 43%|  E|A|
  |0x000002017e380000|0x000002017e380830, 0x000002017e3c69c0, 0x000002017e400000| 54%|  E|A|
  |0x000002017e580000|0x000002017e580830, 0x000002017e59a2d8, 0x000002017e600000| 20%|  E|A|
  |0x000002017e500000|0x000002017e500830, 0x000002017e580000, 0x000002017e580000|100%|  E|A|
  |0x000002017e480000|0x000002017e480830, 0x000002017e4fffd8, 0x000002017e500000| 99%|  E|A|
  |0x000002017e400000|0x000002017e400830, 0x000002017e480000, 0x000002017e480000|100%|  E|A|
  |0x000002017e700000|0x000002017e700830, 0x000002017e75aa48, 0x000002017e780000| 70%|  E|A|
  |0x000002017e680000|0x000002017e680830, 0x000002017e700000, 0x000002017e700000|100%|  E|A|
  |0x000002017e600000|0x000002017e600830, 0x000002017e67ff20, 0x000002017e680000| 99%|  E|A|
  |0x000002017e800000|0x000002017e800830, 0x000002017e861bd0, 0x000002017e880000| 76%|  E|A|
  |0x000002017e780000|0x000002017e780830, 0x000002017e7ffff0, 0x000002017e800000| 99%|  E|A|
  
Fatal error: java.lang.OutOfMemoryError: Could not commit the memory for an aligned heap chunk, OS may be out of memory.
